{"ast":null,"code":"var _jsxFileName = \"F:\\\\sudoku-solver\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PRESET_PUZZLES = [{\n  name: \"Easy\",\n  board: [[1, 2, 3], [4, 0, 6], [7, 5, 8]],\n  difficulty: \"Easy\",\n  hints: 3\n}, {\n  name: \"Medium\",\n  board: [[1, 2, 3], [7, 4, 6], [5, 8, 0]],\n  difficulty: \"Medium\",\n  hints: 2\n}, {\n  name: \"Hard\",\n  board: [[7, 2, 4], [5, 0, 6], [8, 3, 1]],\n  difficulty: \"Hard\",\n  hints: 1\n}];\nconst App = () => {\n  _s();\n  const [size] = useState(3);\n  const [state, setState] = useState({\n    board: Array(size).fill(0).map((_, i) => Array(size).fill(0).map((_, j) => (i * size + j + 1) % (size * size))),\n    solution: [],\n    currentStep: 0,\n    isLoading: false,\n    moves: 0,\n    timeElapsed: 0,\n    bestMoves: null,\n    bestTime: null,\n    isComplete: false,\n    difficulty: \"Easy\",\n    hintsRemaining: 3,\n    moveHistory: []\n  });\n  const [timer, setTimer] = useState(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n  useEffect(() => {\n    if (state.isLoading && !timer) {\n      const interval = setInterval(() => {\n        setState(prev => ({\n          ...prev,\n          timeElapsed: prev.timeElapsed + 1\n        }));\n      }, 1000);\n      setTimer(interval);\n    } else if (!state.isLoading && timer) {\n      clearInterval(timer);\n      setTimer(null);\n    }\n    return () => {\n      if (timer) clearInterval(timer);\n    };\n  }, [state.isLoading, timer]);\n  useEffect(() => {\n    const savedBestMoves = localStorage.getItem(`bestMoves-${state.difficulty}`);\n    const savedBestTime = localStorage.getItem(`bestTime-${state.difficulty}`);\n    if (savedBestMoves) setState(prev => ({\n      ...prev,\n      bestMoves: parseInt(savedBestMoves)\n    }));\n    if (savedBestTime) setState(prev => ({\n      ...prev,\n      bestTime: parseInt(savedBestTime)\n    }));\n  }, [state.difficulty]);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const checkCompletion = board => {\n    const goalState = Array(size).fill(0).map((_, i) => Array(size).fill(0).map((_, j) => (i * size + j + 1) % (size * size)));\n    const isComplete = board.every((row, i) => row.every((tile, j) => tile === goalState[i][j]));\n    if (isComplete && !state.isComplete) {\n      setShowConfetti(true);\n      if (!state.bestMoves || state.moves < state.bestMoves) {\n        localStorage.setItem(`bestMoves-${state.difficulty}`, state.moves.toString());\n        setState(prev => ({\n          ...prev,\n          bestMoves: state.moves\n        }));\n      }\n      if (!state.bestTime || state.timeElapsed < state.bestTime) {\n        localStorage.setItem(`bestTime-${state.difficulty}`, state.timeElapsed.toString());\n        setState(prev => ({\n          ...prev,\n          bestTime: state.timeElapsed\n        }));\n      }\n      setTimeout(() => setShowConfetti(false), 3000);\n    }\n    return isComplete;\n  };\n  const handleTileClick = (row, col) => {\n    if (state.isLoading) return;\n    const newBoard = [...state.board.map(r => [...r])];\n    const emptyPos = findEmptyPosition(newBoard);\n    if (isAdjacent(row, col, emptyPos.row, emptyPos.col)) {\n      // Save current board to history before making the move\n      const newHistory = [...state.moveHistory, state.board.map(r => [...r])];\n      newBoard[emptyPos.row][emptyPos.col] = newBoard[row][col];\n      newBoard[row][col] = 0;\n      const isComplete = checkCompletion(newBoard);\n      setState(prev => ({\n        ...prev,\n        board: newBoard,\n        moves: prev.moves + 1,\n        isComplete,\n        moveHistory: newHistory\n      }));\n    }\n  };\n  const undoMove = () => {\n    if (state.moveHistory.length === 0) return;\n    const previousBoard = state.moveHistory[state.moveHistory.length - 1];\n    const newHistory = state.moveHistory.slice(0, -1);\n    setState(prev => ({\n      ...prev,\n      board: previousBoard,\n      moves: prev.moves - 1,\n      moveHistory: newHistory,\n      isComplete: false\n    }));\n  };\n  const findEmptyPosition = board => {\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (board[i][j] === 0) return {\n          row: i,\n          col: j\n        };\n      }\n    }\n    return {\n      row: -1,\n      col: -1\n    };\n  };\n  const isAdjacent = (row1, col1, row2, col2) => {\n    return Math.abs(row1 - row2) + Math.abs(col1 - col2) === 1;\n  };\n  const getHint = () => {\n    if (state.hintsRemaining <= 0 || state.solution.length === 0) return;\n    const nextBoard = state.solution[Math.min(state.currentStep + 1, state.solution.length - 1)];\n    setState(prev => ({\n      ...prev,\n      board: nextBoard,\n      currentStep: Math.min(prev.currentStep + 1, prev.solution.length - 1),\n      hintsRemaining: prev.hintsRemaining - 1,\n      moves: prev.moves + 1\n    }));\n  };\n  const loadPresetPuzzle = preset => {\n    setState({\n      board: preset.board,\n      solution: [],\n      currentStep: 0,\n      isLoading: false,\n      moves: 0,\n      timeElapsed: 0,\n      bestMoves: null,\n      bestTime: null,\n      isComplete: false,\n      difficulty: preset.difficulty,\n      hintsRemaining: preset.hints,\n      moveHistory: []\n    });\n  };\n  const shuffleBoard = () => {\n    const moves = 100;\n    let newBoard = [...state.board.map(r => [...r])];\n    for (let i = 0; i < moves; i++) {\n      const emptyPos = findEmptyPosition(newBoard);\n      const possibleMoves = [];\n      if (emptyPos.row > 0) possibleMoves.push({\n        row: emptyPos.row - 1,\n        col: emptyPos.col\n      });\n      if (emptyPos.row < size - 1) possibleMoves.push({\n        row: emptyPos.row + 1,\n        col: emptyPos.col\n      });\n      if (emptyPos.col > 0) possibleMoves.push({\n        row: emptyPos.row,\n        col: emptyPos.col - 1\n      });\n      if (emptyPos.col < size - 1) possibleMoves.push({\n        row: emptyPos.row,\n        col: emptyPos.col + 1\n      });\n      const move = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n      newBoard[emptyPos.row][emptyPos.col] = newBoard[move.row][move.col];\n      newBoard[move.row][move.col] = 0;\n    }\n    setState({\n      ...state,\n      board: newBoard,\n      solution: [],\n      currentStep: 0,\n      moves: 0,\n      timeElapsed: 0,\n      isComplete: false,\n      moveHistory: []\n    });\n  };\n  const solvePuzzle = async () => {\n    setState({\n      ...state,\n      isLoading: true\n    });\n    try {\n      const response = await axios.post('http://localhost:8000/solve', {\n        board: state.board\n      });\n      setState({\n        ...state,\n        solution: response.data.solution,\n        isLoading: false,\n        currentStep: 0\n      });\n    } catch (err) {\n      setState({\n        ...state,\n        isLoading: false,\n        solution: [],\n        currentStep: 0\n      });\n    }\n  };\n  const nextStep = () => {\n    if (state.currentStep < state.solution.length - 1) {\n      setState({\n        ...state,\n        board: state.solution[state.currentStep + 1],\n        currentStep: state.currentStep + 1\n      });\n    }\n  };\n  const prevStep = () => {\n    if (state.currentStep > 0) {\n      setState({\n        ...state,\n        board: state.solution[state.currentStep - 1],\n        currentStep: state.currentStep - 1\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-100 to-purple-100 py-6 flex flex-col justify-center sm:py-12\",\n    children: [showConfetti && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 pointer-events-none\",\n      children: \"\\uD83C\\uDF89\\uD83C\\uDF8A\\u2728\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative py-3 sm:max-w-xl sm:mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 bg-gradient-to-r from-cyan-400 to-blue-500 shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-20\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-md mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divide-y divide-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center pb-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-3xl font-bold text-gray-900\",\n                children: \"N-Puzzle Solver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2 text-gray-600\",\n                children: \"Using A* Algorithm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4 flex justify-center space-x-2\",\n                children: PRESET_PUZZLES.map(preset => /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => loadPresetPuzzle(preset),\n                  className: `px-3 py-1 text-sm rounded transition-colors duration-200 ${state.difficulty === preset.difficulty ? 'bg-indigo-600 text-white' : 'bg-indigo-100 text-indigo-700 hover:bg-indigo-200'}`,\n                  children: preset.name\n                }, preset.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mb-4 text-sm font-medium\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-blue-600\",\n                    children: [\"Moves: \", state.moves]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 21\n                  }, this), state.bestMoves && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-green-600\",\n                    children: [\"Best: \", state.bestMoves]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"space-y-1 text-right\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-blue-600\",\n                    children: [\"Time: \", formatTime(state.timeElapsed)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 21\n                  }, this), state.bestTime && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-green-600\",\n                    children: [\"Best: \", formatTime(state.bestTime)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-yellow-600\",\n                  children: [\"Hints: \", state.hintsRemaining, \" remaining\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-3 gap-2 mb-4\",\n                children: state.board.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-center\",\n                  children: row.map((tile, j) => /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleTileClick(i, j),\n                    className: `w-16 h-16 text-xl font-bold rounded-lg shadow-md transition-all duration-200 transform hover:scale-105 active:scale-95 \n                            ${tile === 0 ? 'bg-gray-200 cursor-default' : 'bg-white border-2 border-blue-200 hover:border-blue-400 text-blue-600'} ${state.isLoading ? 'cursor-not-allowed opacity-75' : ''}`,\n                    disabled: state.isLoading || tile === 0,\n                    children: tile === 0 ? '' : tile\n                  }, j, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 25\n                  }, this))\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-center space-x-4 mb-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors duration-200 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\",\n                  onClick: shuffleBoard,\n                  disabled: state.isLoading,\n                  children: \"Shuffle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors duration-200 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\",\n                  onClick: solvePuzzle,\n                  disabled: state.isLoading,\n                  children: state.isLoading ? 'Solving...' : 'Solve'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition-colors duration-200 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\",\n                  onClick: getHint,\n                  disabled: state.isLoading || state.hintsRemaining <= 0 || state.solution.length === 0,\n                  children: [\"Hint (\", state.hintsRemaining, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors duration-200 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\",\n                  onClick: undoMove,\n                  disabled: state.isLoading || state.moveHistory.length === 0,\n                  children: \"Undo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this), state.moveHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center text-sm text-gray-500\",\n                children: [\"Move history: \", state.moveHistory.length, \" moves\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"LlFRiR4d1RINucSDGCY1NsCCq/M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PRESET_PUZZLES","name","board","difficulty","hints","App","_s","size","state","setState","Array","fill","map","_","i","j","solution","currentStep","isLoading","moves","timeElapsed","bestMoves","bestTime","isComplete","hintsRemaining","moveHistory","timer","setTimer","showConfetti","setShowConfetti","interval","setInterval","prev","clearInterval","savedBestMoves","localStorage","getItem","savedBestTime","parseInt","formatTime","seconds","mins","Math","floor","secs","toString","padStart","checkCompletion","goalState","every","row","tile","setItem","setTimeout","handleTileClick","col","newBoard","r","emptyPos","findEmptyPosition","isAdjacent","newHistory","undoMove","length","previousBoard","slice","row1","col1","row2","col2","abs","getHint","nextBoard","min","loadPresetPuzzle","preset","shuffleBoard","possibleMoves","push","move","random","solvePuzzle","response","post","data","err","nextStep","prevStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["F:/sudoku-solver/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface PuzzleState {\n  board: number[][];\n  solution: number[][][];\n  currentStep: number;\n  isLoading: boolean;\n  moves: number;\n  timeElapsed: number;\n  bestMoves: number | null;\n  bestTime: number | null;\n  isComplete: boolean;\n  difficulty: string;\n  hintsRemaining: number;\n  moveHistory: number[][][];\n}\n\nconst PRESET_PUZZLES = [\n  {\n    name: \"Easy\",\n    board: [[1, 2, 3], [4, 0, 6], [7, 5, 8]],\n    difficulty: \"Easy\",\n    hints: 3\n  },\n  {\n    name: \"Medium\",\n    board: [[1, 2, 3], [7, 4, 6], [5, 8, 0]],\n    difficulty: \"Medium\",\n    hints: 2\n  },\n  {\n    name: \"Hard\",\n    board: [[7, 2, 4], [5, 0, 6], [8, 3, 1]],\n    difficulty: \"Hard\",\n    hints: 1\n  }\n];\n\nconst App: React.FC = () => {\n  const [size] = useState<number>(3);\n  const [state, setState] = useState<PuzzleState>({\n    board: Array(size).fill(0).map((_, i) => \n      Array(size).fill(0).map((_, j) => (i * size + j + 1) % (size * size))\n    ),\n    solution: [],\n    currentStep: 0,\n    isLoading: false,\n    moves: 0,\n    timeElapsed: 0,\n    bestMoves: null,\n    bestTime: null,\n    isComplete: false,\n    difficulty: \"Easy\",\n    hintsRemaining: 3,\n    moveHistory: []\n  });\n  const [timer, setTimer] = useState<number | null>(null);\n  const [showConfetti, setShowConfetti] = useState(false);\n\n  useEffect(() => {\n    if (state.isLoading && !timer) {\n      const interval = setInterval(() => {\n        setState(prev => ({\n          ...prev,\n          timeElapsed: prev.timeElapsed + 1\n        }));\n      }, 1000);\n      setTimer(interval);\n    } else if (!state.isLoading && timer) {\n      clearInterval(timer);\n      setTimer(null);\n    }\n    return () => {\n      if (timer) clearInterval(timer);\n    };\n  }, [state.isLoading, timer]);\n\n  useEffect(() => {\n    const savedBestMoves = localStorage.getItem(`bestMoves-${state.difficulty}`);\n    const savedBestTime = localStorage.getItem(`bestTime-${state.difficulty}`);\n    if (savedBestMoves) setState(prev => ({ ...prev, bestMoves: parseInt(savedBestMoves) }));\n    if (savedBestTime) setState(prev => ({ ...prev, bestTime: parseInt(savedBestTime) }));\n  }, [state.difficulty]);\n\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const checkCompletion = (board: number[][]) => {\n    const goalState = Array(size).fill(0).map((_, i) => \n      Array(size).fill(0).map((_, j) => (i * size + j + 1) % (size * size))\n    );\n    const isComplete = board.every((row, i) => \n      row.every((tile, j) => tile === goalState[i][j])\n    );\n    \n    if (isComplete && !state.isComplete) {\n      setShowConfetti(true);\n      if (!state.bestMoves || state.moves < state.bestMoves) {\n        localStorage.setItem(`bestMoves-${state.difficulty}`, state.moves.toString());\n        setState(prev => ({ ...prev, bestMoves: state.moves }));\n      }\n      if (!state.bestTime || state.timeElapsed < state.bestTime) {\n        localStorage.setItem(`bestTime-${state.difficulty}`, state.timeElapsed.toString());\n        setState(prev => ({ ...prev, bestTime: state.timeElapsed }));\n      }\n      setTimeout(() => setShowConfetti(false), 3000);\n    }\n    return isComplete;\n  };\n\n  const handleTileClick = (row: number, col: number) => {\n    if (state.isLoading) return;\n    \n    const newBoard = [...state.board.map(r => [...r])];\n    const emptyPos = findEmptyPosition(newBoard);\n    \n    if (isAdjacent(row, col, emptyPos.row, emptyPos.col)) {\n      // Save current board to history before making the move\n      const newHistory = [...state.moveHistory, state.board.map(r => [...r])];\n      \n      newBoard[emptyPos.row][emptyPos.col] = newBoard[row][col];\n      newBoard[row][col] = 0;\n      const isComplete = checkCompletion(newBoard);\n      \n      setState(prev => ({\n        ...prev,\n        board: newBoard,\n        moves: prev.moves + 1,\n        isComplete,\n        moveHistory: newHistory\n      }));\n    }\n  };\n\n  const undoMove = () => {\n    if (state.moveHistory.length === 0) return;\n    \n    const previousBoard = state.moveHistory[state.moveHistory.length - 1];\n    const newHistory = state.moveHistory.slice(0, -1);\n    \n    setState(prev => ({\n      ...prev,\n      board: previousBoard,\n      moves: prev.moves - 1,\n      moveHistory: newHistory,\n      isComplete: false\n    }));\n  };\n\n  const findEmptyPosition = (board: number[][]) => {\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (board[i][j] === 0) return { row: i, col: j };\n      }\n    }\n    return { row: -1, col: -1 };\n  };\n\n  const isAdjacent = (row1: number, col1: number, row2: number, col2: number) => {\n    return Math.abs(row1 - row2) + Math.abs(col1 - col2) === 1;\n  };\n\n  const getHint = () => {\n    if (state.hintsRemaining <= 0 || state.solution.length === 0) return;\n    \n    const nextBoard = state.solution[Math.min(state.currentStep + 1, state.solution.length - 1)];\n    setState(prev => ({\n      ...prev,\n      board: nextBoard,\n      currentStep: Math.min(prev.currentStep + 1, prev.solution.length - 1),\n      hintsRemaining: prev.hintsRemaining - 1,\n      moves: prev.moves + 1\n    }));\n  };\n\n  const loadPresetPuzzle = (preset: typeof PRESET_PUZZLES[0]) => {\n    setState({\n      board: preset.board,\n      solution: [],\n      currentStep: 0,\n      isLoading: false,\n      moves: 0,\n      timeElapsed: 0,\n      bestMoves: null,\n      bestTime: null,\n      isComplete: false,\n      difficulty: preset.difficulty,\n      hintsRemaining: preset.hints,\n      moveHistory: []\n    });\n  };\n\n  const shuffleBoard = () => {\n    const moves = 100;\n    let newBoard = [...state.board.map(r => [...r])];\n    \n    for (let i = 0; i < moves; i++) {\n      const emptyPos = findEmptyPosition(newBoard);\n      const possibleMoves: Array<{row: number, col: number}> = [];\n      \n      if (emptyPos.row > 0) possibleMoves.push({ row: emptyPos.row - 1, col: emptyPos.col });\n      if (emptyPos.row < size - 1) possibleMoves.push({ row: emptyPos.row + 1, col: emptyPos.col });\n      if (emptyPos.col > 0) possibleMoves.push({ row: emptyPos.row, col: emptyPos.col - 1 });\n      if (emptyPos.col < size - 1) possibleMoves.push({ row: emptyPos.row, col: emptyPos.col + 1 });\n      \n      const move = possibleMoves[Math.floor(Math.random() * possibleMoves.length)];\n      newBoard[emptyPos.row][emptyPos.col] = newBoard[move.row][move.col];\n      newBoard[move.row][move.col] = 0;\n    }\n    \n    setState({\n      ...state,\n      board: newBoard,\n      solution: [],\n      currentStep: 0,\n      moves: 0,\n      timeElapsed: 0,\n      isComplete: false,\n      moveHistory: []\n    });\n  };\n\n  const solvePuzzle = async () => {\n    setState({ ...state, isLoading: true });\n    try {\n      const response = await axios.post('http://localhost:8000/solve', {\n        board: state.board\n      });\n      setState({\n        ...state,\n        solution: response.data.solution,\n        isLoading: false,\n        currentStep: 0\n      });\n    } catch (err) {\n      setState({\n        ...state,\n        isLoading: false,\n        solution: [],\n        currentStep: 0\n      });\n    }\n  };\n\n  const nextStep = () => {\n    if (state.currentStep < state.solution.length - 1) {\n      setState({\n        ...state,\n        board: state.solution[state.currentStep + 1],\n        currentStep: state.currentStep + 1\n      });\n    }\n  };\n\n  const prevStep = () => {\n    if (state.currentStep > 0) {\n      setState({\n        ...state,\n        board: state.solution[state.currentStep - 1],\n        currentStep: state.currentStep - 1\n      });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-100 to-purple-100 py-6 flex flex-col justify-center sm:py-12\">\n      {showConfetti && (\n        <div className=\"fixed inset-0 pointer-events-none\">\n          🎉🎊✨\n        </div>\n      )}\n      <div className=\"relative py-3 sm:max-w-xl sm:mx-auto\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-400 to-blue-500 shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl\"></div>\n        <div className=\"relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-20\">\n          <div className=\"max-w-md mx-auto\">\n            <div className=\"divide-y divide-gray-200\">\n              <div className=\"text-center pb-8\">\n                <h1 className=\"text-3xl font-bold text-gray-900\">N-Puzzle Solver</h1>\n                <p className=\"mt-2 text-gray-600\">Using A* Algorithm</p>\n                <div className=\"mt-4 flex justify-center space-x-2\">\n                  {PRESET_PUZZLES.map((preset) => (\n                    <button\n                      key={preset.name}\n                      onClick={() => loadPresetPuzzle(preset)}\n                      className={`px-3 py-1 text-sm rounded transition-colors duration-200 ${\n                        state.difficulty === preset.difficulty\n                          ? 'bg-indigo-600 text-white'\n                          : 'bg-indigo-100 text-indigo-700 hover:bg-indigo-200'\n                      }`}\n                    >\n                      {preset.name}\n                    </button>\n                  ))}\n                </div>\n              </div>\n              <div className=\"py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex justify-between items-center mb-4 text-sm font-medium\">\n                  <div className=\"space-y-1\">\n                    <div className=\"text-blue-600\">Moves: {state.moves}</div>\n                    {state.bestMoves && (\n                      <div className=\"text-green-600\">Best: {state.bestMoves}</div>\n                    )}\n                  </div>\n                  <div className=\"space-y-1 text-right\">\n                    <div className=\"text-blue-600\">Time: {formatTime(state.timeElapsed)}</div>\n                    {state.bestTime && (\n                      <div className=\"text-green-600\">Best: {formatTime(state.bestTime)}</div>\n                    )}\n                  </div>\n                </div>\n                <div className=\"text-center mb-4\">\n                  <span className=\"text-yellow-600\">\n                    Hints: {state.hintsRemaining} remaining\n                  </span>\n                </div>\n                <div className=\"grid grid-cols-3 gap-2 mb-4\">\n                  {state.board.map((row, i) => (\n                    <div key={i} className=\"flex justify-center\">\n                      {row.map((tile, j) => (\n                        <button\n                          key={j}\n                          onClick={() => handleTileClick(i, j)}\n                          className={`w-16 h-16 text-xl font-bold rounded-lg shadow-md transition-all duration-200 transform hover:scale-105 active:scale-95 \n                            ${tile === 0 \n                              ? 'bg-gray-200 cursor-default' \n                              : 'bg-white border-2 border-blue-200 hover:border-blue-400 text-blue-600'\n                            } ${state.isLoading ? 'cursor-not-allowed opacity-75' : ''}`}\n                          disabled={state.isLoading || tile === 0}\n                        >\n                          {tile === 0 ? '' : tile}\n                        </button>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"flex justify-center space-x-4 mb-4\">\n                  <button\n                    className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors duration-200 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    onClick={shuffleBoard}\n                    disabled={state.isLoading}\n                  >\n                    Shuffle\n                  </button>\n                  <button\n                    className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors duration-200 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    onClick={solvePuzzle}\n                    disabled={state.isLoading}\n                  >\n                    {state.isLoading ? 'Solving...' : 'Solve'}\n                  </button>\n                  <button\n                    className=\"px-4 py-2 bg-yellow-500 text-white rounded hover:bg-yellow-600 transition-colors duration-200 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    onClick={getHint}\n                    disabled={state.isLoading || state.hintsRemaining <= 0 || state.solution.length === 0}\n                  >\n                    Hint ({state.hintsRemaining})\n                  </button>\n                  <button\n                    className=\"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors duration-200 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed\"\n                    onClick={undoMove}\n                    disabled={state.isLoading || state.moveHistory.length === 0}\n                  >\n                    Undo\n                  </button>\n                </div>\n\n                {state.moveHistory.length > 0 && (\n                  <div className=\"text-center text-sm text-gray-500\">\n                    Move history: {state.moveHistory.length} moves\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}